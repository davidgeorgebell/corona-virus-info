{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useFetch(url) {\n  var _useState = useState(),\n      info = _useState[0],\n      setInfo = _useState[1];\n\n  var _useState2 = useState(null),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(false),\n      loading = _useState3[0],\n      setLoading = _useState3[1];\n\n  useEffect(function () {\n    console.log('Mounting or Updating');\n\n    var fetchData = function fetchData() {\n      var res, json;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 4:\n              res = _context.sent;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 7:\n              json = _context.sent;\n              setInfo(json);\n              setLoading(false);\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](1);\n              setError(_context.t0);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 12]], Promise);\n    };\n\n    fetchData();\n  }, [url]);\n  return info;\n}","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/utils/useFetch.js"],"names":["useState","useEffect","useFetch","url","info","setInfo","error","setError","loading","setLoading","console","log","fetchData","fetch","res","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACZH,QAAQ,EADI;AAAA,MAC7BI,IAD6B;AAAA,MACvBC,OADuB;;AAAA,mBAEVL,QAAQ,CAAC,IAAD,CAFE;AAAA,MAE7BM,KAF6B;AAAA,MAEtBC,QAFsB;;AAAA,mBAGNP,QAAQ,CAAC,KAAD,CAHF;AAAA,MAG7BQ,OAH6B;AAAA,MAGpBC,UAHoB;;AAIpCR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,QAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBH,cAAAA,UAAU,CAAC,IAAD,CAAV;AADgB;AAAA;AAAA,+CAGII,KAAK,CAACV,GAAD,CAHT;;AAAA;AAGRW,cAAAA,GAHQ;AAAA;AAAA,+CAIKA,GAAG,CAACC,IAAJ,EAJL;;AAAA;AAIRA,cAAAA,IAJQ;AAKdV,cAAAA,OAAO,CAACU,IAAD,CAAP;AACAN,cAAAA,UAAU,CAAC,KAAD,CAAV;AANc;AAAA;;AAAA;AAAA;AAAA;AAQdF,cAAAA,QAAQ,aAAR;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAWAK,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACT,GAAD,CAdM,CAAT;AAeA,SAAOC,IAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useFetch(url) {\n  const [info, setInfo] = useState();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    console.log('Mounting or Updating');\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setInfo(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return info;\n}\n"]},"metadata":{},"sourceType":"module"}