{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useFetch(url) {\n  const {\n    0: response,\n    1: setResponse\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  useEffect(() => {\n    console.log('Mounting or Updating');\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        console.table(json);\n        setResponse(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return {\n    response,\n    error\n  };\n}","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/utils/useFetch.js"],"names":["useState","useEffect","useFetch","url","response","setResponse","loading","setLoading","error","setError","console","log","fetchData","res","fetch","json","table"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACQ,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,UAAMC,SAAS,GAAG,YAAY;AAC5BL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,UAAI;AACF,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAACX,GAAD,CAAvB;AACA,cAAMY,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACAL,QAAAA,OAAO,CAACM,KAAR,CAAcD,IAAd;AACAV,QAAAA,WAAW,CAACU,IAAD,CAAX;AACAR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAND,CAME,OAAOC,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAXD;;AAYAI,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAO;AAAER,IAAAA,QAAF;AAAYI,IAAAA;AAAZ,GAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function useFetch(url) {\n  const [response, setResponse] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    console.log('Mounting or Updating');\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        console.table(json);\n        setResponse(json);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return { response, error };\n}\n"]},"metadata":{},"sourceType":"module"}