{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\nexport default function CountrySelect() {\n  var _useState = useState('GBR'),\n      country = _useState[0],\n      setCountry = _useState[1];\n\n  var countries = useFetch('https://covid19.mathdro.id/api/countries');\n\n  var _useState2 = useState(),\n      loading = _useState2.info,\n      info = _useState2.info,\n      error = _useState2.error;\n\n  if (!countries) return null;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Showing: \", country), __jsx(\"select\", {\n    onChange: function onChange(event) {\n      return setCountry(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return __jsx(\"option\", {\n      selected: country === countries.iso3[value],\n      value: countries.iso3[value],\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, key);\n  })), __jsx(Info, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(country),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js"],"names":["useState","useFetch","Info","CountrySelect","country","setCountry","countries","loading","info","error","event","target","value","Object","entries","map","key","iso3"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBACRH,QAAQ,CAAC,KAAD,CADA;AAAA,MAC/BI,OAD+B;AAAA,MACtBC,UADsB;;AAEtC,MAAMC,SAAS,GAAGL,QAAQ,CAAC,0CAAD,CAA1B;;AAFsC,mBAGCD,QAAQ,EAHT;AAAA,MAGxBO,OAHwB,cAG9BC,IAH8B;AAAA,MAGfA,IAHe,cAGfA,IAHe;AAAA,MAGTC,KAHS,cAGTA,KAHS;;AAItC,MAAI,CAACH,SAAL,EAAgB,OAAO,IAAP;AAEhB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcF,OAAd,CADF,EAEE;AAAQ,IAAA,QAAQ,EAAE,kBAACM,KAAD;AAAA,aAAWL,UAAU,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MAAM,CAACC,OAAP,CAAeR,SAAS,CAACA,SAAzB,EAAoCS,GAApC,CAAwC;AAAA;AAAA,QAAEC,GAAF;AAAA,QAAOJ,KAAP;;AAAA,WACvC;AACE,MAAA,QAAQ,EAAER,OAAO,KAAKE,SAAS,CAACW,IAAV,CAAeL,KAAf,CADxB;AAEE,MAAA,KAAK,EAAEN,SAAS,CAACW,IAAV,CAAeL,KAAf,CAFT;AAGE,MAAA,GAAG,EAAEI,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,GAJH,CADuC;AAAA,GAAxC,CADH,CAFF,EAYE,MAAC,IAAD;AAAM,IAAA,GAAG,qDAA8CZ,OAA9C,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD","sourcesContent":["import { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\n\nexport default function CountrySelect() {\n  const [country, setCountry] = useState('GBR');\n  const countries = useFetch('https://covid19.mathdro.id/api/countries');\n  const { info: loading, info, error } = useState();\n  if (!countries) return null;\n\n  return (\n    <div>\n      <h2>Showing: {country}</h2>\n      <select onChange={(event) => setCountry(event.target.value)}>\n        {Object.entries(countries.countries).map(([key, value]) => (\n          <option\n            selected={country === countries.iso3[value]}\n            value={countries.iso3[value]}\n            key={key}>\n            {key}\n          </option>\n        ))}\n      </select>\n      <Info url={`https://covid19.mathdro.id/api/countries/${country}`}></Info>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}