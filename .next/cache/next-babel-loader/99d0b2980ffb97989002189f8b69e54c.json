{"ast":null,"code":"var _jsxFileName = \"/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useFetch from '../utils/useFetch';\nexport default function CountrySelect(url) {\n  const countries = useFetch(url);\n  console.log(countries);\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Loading\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Countries:\"), __jsx(\"select\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(([name, code]) => __jsx(\"option\", {\n    value: code,\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, name))));\n}","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js"],"names":["useFetch","CountrySelect","url","countries","console","log","Object","entries","map","name","code"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AAEA,eAAe,SAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACzC,QAAMC,SAAS,GAAGH,QAAQ,CAACE,GAAD,CAA1B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,MAAI,CAACA,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,MAAM,CAACC,OAAP,CAAeJ,SAAS,CAACA,SAAzB,EAAoCK,GAApC,CAAwC,CAAC,CAACC,IAAD,EAAOC,IAAP,CAAD,KACvC;AAAQ,IAAA,KAAK,EAAEA,IAAf;AAAqB,IAAA,GAAG,EAAED,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,CADD,CADH,CAFF,CADF;AAYD","sourcesContent":["import useFetch from '../utils/useFetch';\n\nexport default function CountrySelect(url) {\n  const countries = useFetch(url);\n  console.log(countries);\n  if (!countries) return <p>Loading</p>;\n  return (\n    <div>\n      <p>Countries:</p>\n      <select>\n        {Object.entries(countries.countries).map(([name, code]) => (\n          <option value={code} key={name}>\n            {name}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}