{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\nexport default function CountrySelect() {\n  var _useState = useState('GBR'),\n      selectedCountry = _useState[0],\n      setCountry = _useState[1];\n\n  var countries = useFetch('https://covid19.mathdro.id/api/countries');\n  if (!countries) return null;\n  var countryArr = Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return {\n      name: \"\".concat(key),\n      code: \"\".concat(value)\n    };\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Showing: \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(event) {\n      return setCountry(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, countryArr.map(function (country) {\n    if (country.name !== selectedCountry) {\n      return __jsx(\"option\", {\n        value: country.code,\n        label: country.name,\n        key: country.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, country.name);\n    } else {\n      return __jsx(\"option\", {\n        value: country.code,\n        label: country.name,\n        key: country.name,\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, country.name);\n    }\n  })), __jsx(Info, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n} // {\n//   Object.entries(countryArr).map(([key, value]) => (\n//     <option\n//       //   selected={country === countries.iso3[value]}\n//       value={countries.iso3[value]}\n//       key={key}>\n//       {key}\n//     </option>\n//   ));\n// }","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js"],"names":["useState","useFetch","Info","CountrySelect","selectedCountry","setCountry","countries","countryArr","Object","entries","map","key","value","name","code","event","target","country"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBACAH,QAAQ,CAAC,KAAD,CADR;AAAA,MAC/BI,eAD+B;AAAA,MACdC,UADc;;AAEtC,MAAMC,SAAS,GAAGL,QAAQ,CAAC,0CAAD,CAA1B;AAEA,MAAI,CAACK,SAAL,EAAgB,OAAO,IAAP;AAEhB,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,SAAS,CAACA,SAAzB,EAAoCI,GAApC,CAAwC,gBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AAC3E,WAAO;AACLC,MAAAA,IAAI,YAAKF,GAAL,CADC;AAELG,MAAAA,IAAI,YAAKF,KAAL;AAFC,KAAP;AAID,GALkB,CAAnB;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcR,eAAd,CADF,EAEE;AAAQ,IAAA,QAAQ,EAAE,kBAACW,KAAD;AAAA,aAAWV,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAArB;AAAA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,UAAU,CAACG,GAAX,CAAe,UAACO,OAAD,EAAa;AAC3B,QAAIA,OAAO,CAACJ,IAAR,KAAiBT,eAArB,EAAsC;AACpC,aACE;AACE,QAAA,KAAK,EAAEa,OAAO,CAACH,IADjB;AAEE,QAAA,KAAK,EAAEG,OAAO,CAACJ,IAFjB;AAGE,QAAA,GAAG,EAAEI,OAAO,CAACJ,IAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGI,OAAO,CAACJ,IAJX,CADF;AAQD,KATD,MASO;AACL,aACE;AACE,QAAA,KAAK,EAAEI,OAAO,CAACH,IADjB;AAEE,QAAA,KAAK,EAAEG,OAAO,CAACJ,IAFjB;AAGE,QAAA,GAAG,EAAEI,OAAO,CAACJ,IAHf;AAIE,QAAA,QAAQ,EAAC,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGI,OAAO,CAACJ,IALX,CADF;AASD;AACF,GArBA,CADH,CAFF,EA0BE,MAAC,IAAD;AACE,IAAA,GAAG,qDAA8CT,eAA9C,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA+BD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\n\nexport default function CountrySelect() {\n  const [selectedCountry, setCountry] = useState('GBR');\n  const countries = useFetch('https://covid19.mathdro.id/api/countries');\n\n  if (!countries) return null;\n\n  const countryArr = Object.entries(countries.countries).map(([key, value]) => {\n    return {\n      name: `${key}`,\n      code: `${value}`\n    };\n  });\n\n  return (\n    <div>\n      <h2>Showing: {selectedCountry}</h2>\n      <select onChange={(event) => setCountry(event.target.value)}>\n        {countryArr.map((country) => {\n          if (country.name !== selectedCountry) {\n            return (\n              <option\n                value={country.code}\n                label={country.name}\n                key={country.name}>\n                {country.name}\n              </option>\n            );\n          } else {\n            return (\n              <option\n                value={country.code}\n                label={country.name}\n                key={country.name}\n                selected='selected'>\n                {country.name}\n              </option>\n            );\n          }\n        })}\n      </select>\n      <Info\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}></Info>\n    </div>\n  );\n}\n\n// {\n//   Object.entries(countryArr).map(([key, value]) => (\n//     <option\n//       //   selected={country === countries.iso3[value]}\n//       value={countries.iso3[value]}\n//       key={key}>\n//       {key}\n//     </option>\n//   ));\n// }\n"]},"metadata":{},"sourceType":"module"}