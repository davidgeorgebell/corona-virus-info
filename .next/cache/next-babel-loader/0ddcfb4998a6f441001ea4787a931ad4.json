{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\nexport default function CountrySelect() {\n  var _useState = useState('GBR'),\n      selectedCountry = _useState[0],\n      setCountry = _useState[1];\n\n  var countries = useFetch('https://covid19.mathdro.id/api/countries');\n  if (!countries) return null;\n  var countryArr = Object.entries(countries.countries).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return {\n      label: \"\".concat(key),\n      code: \"\".concat(value)\n    };\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Showing: \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(event) {\n      return setCountry(event.target.value);\n    },\n    defaultValue: {\n      label: 'GBR',\n      value: 2\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, countryArr.map(function (country) {\n    return __jsx(\"option\", {\n      value: country.code,\n      key: country.name,\n      selected: selectedCountry.code === country.code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, country.name);\n  })), __jsx(Info, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n} // {\n//   Object.entries(countryArr).map(([key, value]) => (\n//     <option\n//       //   selected={country === countries.iso3[value]}\n//       value={countries.iso3[value]}\n//       key={key}>\n//       {key}\n//     </option>\n//   ));\n// }","map":{"version":3,"sources":["/Users/david/Desktop/Projects/corona-virus/src/components/CountrySelect.js"],"names":["useState","useFetch","Info","CountrySelect","selectedCountry","setCountry","countries","countryArr","Object","entries","map","key","value","label","code","event","target","country","name"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA,kBACAH,QAAQ,CAAC,KAAD,CADR;AAAA,MAC/BI,eAD+B;AAAA,MACdC,UADc;;AAEtC,MAAMC,SAAS,GAAGL,QAAQ,CAAC,0CAAD,CAA1B;AAEA,MAAI,CAACK,SAAL,EAAgB,OAAO,IAAP;AAEhB,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAP,CAAeH,SAAS,CAACA,SAAzB,EAAoCI,GAApC,CAAwC,gBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AAC3E,WAAO;AACLC,MAAAA,KAAK,YAAKF,GAAL,CADA;AAELG,MAAAA,IAAI,YAAKF,KAAL;AAFC,KAAP;AAID,GALkB,CAAnB;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcR,eAAd,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAACW,KAAD;AAAA,aAAWV,UAAU,CAACU,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAArB;AAAA,KADZ;AAEE,IAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,KAAT;AAAgBD,MAAAA,KAAK,EAAE;AAAvB,KAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGL,UAAU,CAACG,GAAX,CAAe,UAACO,OAAD;AAAA,WACd;AACE,MAAA,KAAK,EAAEA,OAAO,CAACH,IADjB;AAEE,MAAA,GAAG,EAAEG,OAAO,CAACC,IAFf;AAGE,MAAA,QAAQ,EAAEd,eAAe,CAACU,IAAhB,KAAyBG,OAAO,CAACH,IAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGG,OAAO,CAACC,IAJX,CADc;AAAA,GAAf,CAHH,CAFF,EAcE,MAAC,IAAD;AACE,IAAA,GAAG,qDAA8Cd,eAA9C,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AAmBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from 'react';\nimport useFetch from '../utils/useFetch';\nimport Info from './Info';\n\nexport default function CountrySelect() {\n  const [selectedCountry, setCountry] = useState('GBR');\n  const countries = useFetch('https://covid19.mathdro.id/api/countries');\n\n  if (!countries) return null;\n\n  const countryArr = Object.entries(countries.countries).map(([key, value]) => {\n    return {\n      label: `${key}`,\n      code: `${value}`\n    };\n  });\n\n  return (\n    <div>\n      <h2>Showing: {selectedCountry}</h2>\n      <select\n        onChange={(event) => setCountry(event.target.value)}\n        defaultValue={{ label: 'GBR', value: 2 }}>\n        {countryArr.map((country) => (\n          <option\n            value={country.code}\n            key={country.name}\n            selected={selectedCountry.code === country.code}>\n            {country.name}\n          </option>\n        ))}\n      </select>\n      <Info\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}></Info>\n    </div>\n  );\n}\n\n// {\n//   Object.entries(countryArr).map(([key, value]) => (\n//     <option\n//       //   selected={country === countries.iso3[value]}\n//       value={countries.iso3[value]}\n//       key={key}>\n//       {key}\n//     </option>\n//   ));\n// }\n"]},"metadata":{},"sourceType":"module"}